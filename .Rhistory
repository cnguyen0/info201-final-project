count() %>%
as.numeric()
mental.impact <- c(yes.mental, maybe.mental, no.mental)
#Filtering out Physical health data and counting it.
yes.physical <- filter(data, grepl("Yes", Physical)) %>%
count() %>%
as.numeric()
maybe.physical <- filter(data, grepl("Maybe", Physical)) %>%
count() %>%
as.numeric()
no.physical <- filter(data, grepl("No", Physical)) %>%
count() %>%
as.numeric()
physical.impact <- c(yes.physical, maybe.physical, no.physical)
#Creating the dataframe
responses <- c("Yes", "Maybe", "No")
data.final <- data.frame(responses, mental, physical)
return(data.final)
}
impact.level <- data[,11:12]
impact.level.num <- count.responses(impact.level)
#Creating functions for each plot
negative.impact <- function(data.input) {
ggplot(data = data.input) +
geom_bar(mapping = aes(x=mental, y = physical, color = responses), size = 3) +
ggtitle("Do you think that discussing this health issue will have negative consequences?") +
labs(x = "Mental Health",
y = "Physical Health", color = "Responses") +
theme_classic() +
xlim(0, 1000) +
ylim(0, 1000)
}
interview <- data.frame(data[,41], data[,39])
interview.num <- count.responses(interview)
#plotting the data
if(input$impact == "Negative Impact") {
ggplot(data = impact.level.num) +
geom_point(mapping = aes(x=mental, y = physical, color = responses), size = 3) +
ggtitle("Do you think that discussing this health issue will have negative consequences?") +
labs(x = "Mental Health",
y = "Physical Health", color = "Responses") +
theme_classic() +
xlim(0, 1000) +
ylim(0, 1000)
} else if (input$impact == "Comfort Level Discussing Health") {
ggplot(data = interview.num) +
geom_point(mapping = aes(x=mental, y = physical, color = responses), size = 3) +
ggtitle("Do you think that discussing this health issue will have negative consequences?") +
labs(x = "Mental Health",
y = "Physical Health", color = "Responses") +
theme_classic() +
xlim(0, 1000) +
ylim(0, 1000)
}  else {}
})
#End Steph
#Cindy
output$PlotName <- renderPlot({
})
#End Cindy
#Megha
output$plotname <- renderPlot({
})
#End Megha
#Kathy
output$plotname <- renderPlot({
})
#End Kathy
#Zoheb
output$plotZoheb <- renderPlotly({
#columns included : is your anonimity protected, Would you feel comfortable discussing a mental health disorder with your coworkers?,
#Would you feel comfortable discussing a mental health disorder with your direct supervisor(s)?, Do you feel that your employer takes mental health as seriously as physical health?
zoheb.data <- data %>% select(  Is.your.anonymity.protected.if.you.choose.to.take.advantage.of.mental.health.or.substance.abuse.treatment.resources.provided.by.your.employer.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.coworkers.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Do.you.feel.that.your.employer.takes.mental.health.as.seriously.as.physical.health.
)
zoheb.data <- zoheb.data %>% filter(Is.your.anonymity.protected.if.you.choose.to.take.advantage.of.mental.health.or.substance.abuse.treatment.resources.provided.by.your.employer. != '') %>%
filter(Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.coworkers. != '') %>%
filter(Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. != '') %>%
filter(Do.you.feel.that.your.employer.takes.mental.health.as.seriously.as.physical.health. != '')
colnames(zoheb.data) <- c('anonimity', 'coworker_discussion', 'supervisor_discussion', 'seriousness_comparison')
#graph formation
types <- as.character(unique(zoheb.data[[input$options]]))
s1 <- as.numeric(sum(zoheb.data[[input$options]] == types[1]))
s2 <- as.numeric(sum(zoheb.data[[input$options]] == types[2]))
s3 <- as.numeric(sum(zoheb.data[[input$options]] == types[3]))
#
descriptions <- c('Is an employee\'s anonimity protected if they choose to take advantage of a mental helth treatment?','Would an employee feel comfortable discussing a mental health disorder with their coworkers?','Would an employee feel comfortable discussing a mental health disorder with their supervisor?','Do employees feel that their employer takes mental health as seriously as physical health?')
titles <- c('anonimity', 'coworker_discussion', 'supervisor_discussion', 'seriousness_comparison')
dynamic.title <- data.frame(titles, descriptions)
#returns plot
return(
plot_ly(
data = zoheb.data,
x = unique(zoheb.data[[input$options]]),
y = c(s1,s2,s3),
type = 'bar'
) %>%
layout(
title = as.character(input$options),
x = 'Options',
y = 'Number of people',
text = as.character(dynamic.title$descriptions[dynamic.title$titles == as.character(input$options)])
)
)
})
#End Zoheb
})
runApp('C:/Users/Stephanie/Desktop/INFO201Assignments/info201-final-project')
library(dplyr)
shiny::runApp('C:/Users/Stephanie/Desktop/INFO201Assignments/info201-final-project')
View(data)
plot <- plot_ly(data = data,
x = ~num.conditions,
y = ~comfort,
z = ~n,
type = "heatmap") %>%
layout(xaxis = list(title = "Number of Diagnosis"),
yaxis = list(title = "Comfortability talking to supervisor"))
return(plot)
}
# Counts number of diagnosis per obersevation
# precondition: diagnosis listed in format of "<condition 1>|<condition 2>|<condition ...>"
#               each condition is seperated by vertical bar
NumDiagnosis <- function(input) {
return(str_split_fixed(input, pattern = "\\|", n = Inf) %>% length())
}
runApp('~/Desktop/info201/info201-final-project')
library(dplyr)
library(stringr)
library(plotly)
# Creates heatmap of relationship between number of diagnosis and comfort with speaking to supervisor
DiagnosisWillingness <- function(data, curr.or.pro.diag, comfort) {
#data <- data %>% filter(Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. != "",
#                        Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. != "")
# selects data focusing on either "currently diagnosed with mental health disorder" or
# "was diagnosed with mental health disorders by a professional to dataframe "data
if (curr.or.pro.diag == "curr") {
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
} else if (curr.or.pro.diag == "pro") {
data <- data %>% filter(Have.you.been.diagnosed.with.a.mental.health.condition.by.a.medical.professional. == "Yes") %>%
select(If.so..what.condition.s..were.you.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
}
# removes uneeded columns from dataframe "data" depending on if asking for comfort speaking to supervisor
# about mental health disorder vs mental health issues
if (comfort == "disorder") {
data$Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. = NULL
} else if (comfort == "issue") {
data$Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. = NULL
}
colnames(data) <- c("diagnosis.status", "comfort")
#create list of number of diagnosis per observation
data$num.conditions <- sapply(data$diagnosis.status, NumDiagnosis)
data <- group_by(data, comfort, num.conditions) %>% summarise(n = n())
View(data)
plot <- plot_ly(data = data,
x = ~num.conditions,
y = ~comfort,
z = ~n,
type = "heatmap") %>%
layout(xaxis = list(title = "Number of Diagnosis"),
yaxis = list(title = "Comfortability talking to supervisor"))
return(plot)
}
# Counts number of diagnosis per obersevation
# precondition: diagnosis listed in format of "<condition 1>|<condition 2>|<condition ...>"
#               each condition is seperated by vertical bar
NumDiagnosis <- function(input) {
return(str_split_fixed(input, pattern = "\\|", n = Inf) %>% length())
}
runApp('~/Desktop/info201/info201-final-project')
runApp('~/Desktop/info201/info201-final-project')
library(dplyr)
library(stringr)
library(plotly)
# Creates heatmap of relationship between number of diagnosis and comfort with speaking to supervisor
DiagnosisWillingness <- function(data, curr.or.pro.diag, comfort) {
#data <- data %>% filter(Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. != "",
#                        Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. != "")
# selects data focusing on either "currently diagnosed with mental health disorder" or
# "was diagnosed with mental health disorders by a professional to dataframe "data
if (curr.or.pro.diag == "curr") {
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
} else if (curr.or.pro.diag == "pro") {
data <- data %>% filter(Have.you.been.diagnosed.with.a.mental.health.condition.by.a.medical.professional. == "Yes") %>%
select(If.so..what.condition.s..were.you.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
}
# removes uneeded columns from dataframe "data" depending on if asking for comfort speaking to supervisor
# about mental health disorder vs mental health issues
if (comfort == "disorder") {
data$Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. = NULL
} else if (comfort == "issue") {
data$Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. = NULL
}
colnames(data) <- c("diagnosis.status", "comfort")
#create list of number of diagnosis per observation
data$num.conditions <- sapply(data$diagnosis.status, NumDiagnosis)
data <- group_by(data, comfort, num.conditions) %>% summarise(n = n())
data[data == ""] <- "No response"
View(data)
plot <- plot_ly(data = data,
x = ~num.conditions,
y = ~comfort,
z = ~n,
type = "heatmap") %>%
layout(xaxis = list(title = "Number of Diagnosis"),
yaxis = list(title = "Comfortability talking to supervisor"))
return(plot)
}
# Counts number of diagnosis per obersevation
# precondition: diagnosis listed in format of "<condition 1>|<condition 2>|<condition ...>"
#               each condition is seperated by vertical bar
NumDiagnosis <- function(input) {
return(str_split_fixed(input, pattern = "\\|", n = Inf) %>% length())
}
runApp('~/Desktop/info201/info201-final-project')
library(dplyr)
library(stringr)
library(plotly)
# Creates heatmap of relationship between number of diagnosis and comfort with speaking to supervisor
DiagnosisWillingness <- function(data, curr.or.pro.diag, comfort) {
#data <- data %>% filter(Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. != "",
#                        Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. != "")
data <- data.frame(data, stringsAsFactors = FALSE)
# selects data focusing on either "currently diagnosed with mental health disorder" or
# "was diagnosed with mental health disorders by a professional to dataframe "data
if (curr.or.pro.diag == "curr") {
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
} else if (curr.or.pro.diag == "pro") {
data <- data %>% filter(Have.you.been.diagnosed.with.a.mental.health.condition.by.a.medical.professional. == "Yes") %>%
select(If.so..what.condition.s..were.you.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
}
# removes uneeded columns from dataframe "data" depending on if asking for comfort speaking to supervisor
# about mental health disorder vs mental health issues
if (comfort == "disorder") {
data$Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. = NULL
} else if (comfort == "issue") {
data$Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. = NULL
}
colnames(data) <- c("diagnosis.status", "comfort")
#create list of number of diagnosis per observation
data$num.conditions <- sapply(data$diagnosis.status, NumDiagnosis)
data <- group_by(data, comfort, num.conditions) %>% summarise(n = n())
data[data == ""] <- "No response"
View(data)
plot <- plot_ly(data = data,
x = ~num.conditions,
y = ~comfort,
z = ~n,
type = "heatmap") %>%
layout(xaxis = list(title = "Number of Diagnosis"),
yaxis = list(title = "Comfortability talking to supervisor"))
return(plot)
}
# Counts number of diagnosis per obersevation
# precondition: diagnosis listed in format of "<condition 1>|<condition 2>|<condition ...>"
#               each condition is seperated by vertical bar
NumDiagnosis <- function(input) {
return(str_split_fixed(input, pattern = "\\|", n = Inf) %>% length())
}
runApp('~/Desktop/info201/info201-final-project')
library(dplyr)
library(stringr)
library(plotly)
# Creates heatmap of relationship between number of diagnosis and comfort with speaking to supervisor
DiagnosisWillingness <- function(data, curr.or.pro.diag, comfort) {
#data <- data %>% filter(Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. != "",
#                        Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. != "")
data <- data.frame(data, stringsAsFactors = FALSE)
# selects data focusing on either "currently diagnosed with mental health disorder" or
# "was diagnosed with mental health disorders by a professional to dataframe "data
if (curr.or.pro.diag == "curr") {
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
} else if (curr.or.pro.diag == "pro") {
data <- data %>% filter(Have.you.been.diagnosed.with.a.mental.health.condition.by.a.medical.professional. == "Yes") %>%
select(If.so..what.condition.s..were.you.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
}
# removes uneeded columns from dataframe "data" depending on if asking for comfort speaking to supervisor
# about mental health disorder vs mental health issues
if (comfort == "disorder") {
data$Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. = NULL
} else if (comfort == "issue") {
data$Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. = NULL
}
colnames(data) <- c("diagnosis.status", "comfort")
#create list of number of diagnosis per observation
data$num.conditions <- sapply(data$diagnosis.status, NumDiagnosis)
data <- group_by(data, comfort, num.conditions) %>% summarise(n = n())
data[data == ""] <- "No response"
View(data)
plot <- plot_ly(data = data,
x = ~num.conditions,
y = ~comfort,
z = ~n,
type = "heatmap") %>%
layout(xaxis = list(title = "Number of Diagnosis"),
yaxis = list(title = "Comfortability talking to supervisor"))
return(plot)
}
# Counts number of diagnosis per obersevation
# precondition: diagnosis listed in format of "<condition 1>|<condition 2>|<condition ...>"
#               each condition is seperated by vertical bar
NumDiagnosis <- function(input) {
return(str_split_fixed(input, pattern = "\\|", n = Inf) %>% length())
}
# Creates heatmap of relationship between number of diagnosis and comfort with speaking to supervisor
DiagnosisWillingness <- function(data, curr.or.pro.diag, comfort) {
#data <- data %>% filter(Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. != "",
#                        Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. != "")
data <- data.frame(data, stringsAsFactors = FALSE)
# selects data focusing on either "currently diagnosed with mental health disorder" or
# "was diagnosed with mental health disorders by a professional to dataframe "data
if (curr.or.pro.diag == "curr") {
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
} else if (curr.or.pro.diag == "pro") {
data <- data %>% filter(Have.you.been.diagnosed.with.a.mental.health.condition.by.a.medical.professional. == "Yes") %>%
select(If.so..what.condition.s..were.you.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
}
# removes uneeded columns from dataframe "data" depending on if asking for comfort speaking to supervisor
# about mental health disorder vs mental health issues
if (comfort == "disorder") {
data$Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. = NULL
} else if (comfort == "issue") {
data$Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. = NULL
}
colnames(data) <- c("diagnosis.status", "comfort")
#create list of number of diagnosis per observation
data$num.conditions <- sapply(data$diagnosis.status, NumDiagnosis)
data <- group_by(data, comfort, num.conditions) %>% summarise(n = n())
data[data == ""] <- "No response"
View(data)
plot <- plot_ly(data = data,
x = ~num.conditions,
y = ~comfort,
z = ~n,
type = "heatmap") %>%
layout(xaxis = list(title = "Number of Diagnosis"),
yaxis = list(title = "Comfortability talking to supervisor"))
return(plot)
}
runApp('~/Desktop/info201/info201-final-project')
library(dplyr)
library(stringr)
library(plotly)
# Creates heatmap of relationship between number of diagnosis and comfort with speaking to supervisor
DiagnosisWillingness <- function(data, curr.or.pro.diag, comfort) {
#data <- data %>% filter(Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. != "",
#                        Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. != "")
#data <- data.frame(data, stringsAsFactors = FALSE)
# selects data focusing on either "currently diagnosed with mental health disorder" or
# "was diagnosed with mental health disorders by a professional to dataframe "data
if (curr.or.pro.diag == "curr") {
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
} else if (curr.or.pro.diag == "pro") {
data <- data %>% filter(Have.you.been.diagnosed.with.a.mental.health.condition.by.a.medical.professional. == "Yes") %>%
select(If.so..what.condition.s..were.you.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
}
# removes uneeded columns from dataframe "data" depending on if asking for comfort speaking to supervisor
# about mental health disorder vs mental health issues
if (comfort == "disorder") {
data$Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. = NULL
} else if (comfort == "issue") {
data$Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. = NULL
}
colnames(data) <- c("diagnosis.status", "comfort")
#create list of number of diagnosis per observation
data$num.conditions <- sapply(data$diagnosis.status, NumDiagnosis)
data <- group_by(data, comfort, num.conditions) %>% summarise(n = n())
data$comfort <- as.character(data$comfort)
data[data$comfort == ""] <- "No response"
plot <- plot_ly(data = data,
x = ~num.conditions,
y = ~comfort,
z = ~n,
type = "heatmap") %>%
layout(xaxis = list(title = "Number of Diagnosis"),
yaxis = list(title = "Comfortability talking to supervisor"))
return(plot)
}
# Counts number of diagnosis per obersevation
# precondition: diagnosis listed in format of "<condition 1>|<condition 2>|<condition ...>"
#               each condition is seperated by vertical bar
NumDiagnosis <- function(input) {
return(str_split_fixed(input, pattern = "\\|", n = Inf) %>% length())
}
setwd("~/Desktop/info201/info201-final-project")
runApp()
library(dplyr)
library(stringr)
library(plotly)
# Creates heatmap of relationship between number of diagnosis and comfort with speaking to supervisor
DiagnosisWillingness <- function(data, curr.or.pro.diag, comfort) {
data <- data.frame(data, stringsAsFactors = FALSE)
# selects data focusing on either "currently diagnosed with mental health disorder" or
# "was diagnosed with mental health disorders by a professional to dataframe "data
if (curr.or.pro.diag == "curr") {
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
} else if (curr.or.pro.diag == "pro") {
data <- data %>% filter(Have.you.been.diagnosed.with.a.mental.health.condition.by.a.medical.professional. == "Yes") %>%
select(If.so..what.condition.s..were.you.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
}
# removes uneeded columns from dataframe "data" depending on if asking for comfort speaking to supervisor
# about mental health disorder vs mental health issues
if (comfort == "disorder") {
data$Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. = NULL
} else if (comfort == "issue") {
data$Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. = NULL
}
colnames(data) <- c("diagnosis.status", "comfort")
#create list of number of diagnosis per observation
data$num.conditions <- sapply(data$diagnosis.status, NumDiagnosis)
data <- group_by(data, comfort, num.conditions) %>% summarise(n = n())
plot <- plot_ly(data = data,
x = ~num.conditions,
y = ~comfort,
z = ~n,
type = "heatmap") %>%
layout(xaxis = list(title = "Number of Diagnosis"),
yaxis = list(title = "Comfortability talking to supervisor"))
return(plot)
}
# Counts number of diagnosis per obersevation
# precondition: diagnosis listed in format of "<condition 1>|<condition 2>|<condition ...>"
#               each condition is seperated by vertical bar
NumDiagnosis <- function(input) {
return(str_split_fixed(input, pattern = "\\|", n = Inf) %>% length())
}
runApp()
library(dplyr)
library(stringr)
library(plotly)
# Creates heatmap of relationship between number of diagnosis and comfort with speaking to supervisor
DiagnosisWillingness <- function(data, curr.or.pro.diag, comfort) {
data <- data.frame(data, stringsAsFactors = FALSE)
data[data == ""] <- "No response"
# selects data focusing on either "currently diagnosed with mental health disorder" or
# "was diagnosed with mental health disorders by a professional to dataframe "data
if (curr.or.pro.diag == "curr") {
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
} else if (curr.or.pro.diag == "pro") {
data <- data %>% filter(Have.you.been.diagnosed.with.a.mental.health.condition.by.a.medical.professional. == "Yes") %>%
select(If.so..what.condition.s..were.you.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..,
Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s..)
}
# removes uneeded columns from dataframe "data" depending on if asking for comfort speaking to supervisor
# about mental health disorder vs mental health issues
if (comfort == "disorder") {
data$Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s.. = NULL
} else if (comfort == "issue") {
data$Would.you.have.been.willing.to.discuss.a.mental.health.issue.with.your.direct.supervisor.s.. = NULL
}
colnames(data) <- c("diagnosis.status", "comfort")
View(data)
#create list of number of diagnosis per observation
data$num.conditions <- sapply(data$diagnosis.status, NumDiagnosis)
data <- group_by(data, comfort, num.conditions) %>% summarise(n = n())
plot <- plot_ly(data = data,
x = ~num.conditions,
y = ~comfort,
z = ~n,
type = "heatmap") %>%
layout(xaxis = list(title = "Number of Diagnosis"),
yaxis = list(title = "Comfortability talking to supervisor"))
return(plot)
}
# Counts number of diagnosis per obersevation
# precondition: diagnosis listed in format of "<condition 1>|<condition 2>|<condition ...>"
#               each condition is seperated by vertical bar
NumDiagnosis <- function(input) {
return(str_split_fixed(input, pattern = "\\|", n = Inf) %>% length())
}
shiny::runApp()
