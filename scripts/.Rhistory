query.params.commit.ID <- paste0("committee_id=", rand.commit, "&fields=members,name&per_page=all")
response.commit.ID <- GET(full.uri.commit, query = query.params.commit)
body.commit.ID <- fromJSON(content(response.commit.ID,"text"))$results$members[[1]] %>%
flatten()
committee.chair <- filter(body.commit.ID, grepl("Chair", title))
committee.chair.name <- paste(committee.chair$legislator.first_name, committee.chair$legislator.last_name)
query.params.commit.ID <- paste0("committee_id=", rand.commit$committee_id, "&fields=members,name&per_page=all")
response.commit.ID <- GET(full.uri.commit, query = query.params.commit)
body.commit.ID <- fromJSON(content(response.commit.ID,"text"))$results$members[[1]] %>%
flatten()
committee.chair <- filter(body.commit.ID, grepl("Chair", title))
committee.chair.name <- paste(committee.chair$legislator.first_name, committee.chair$legislator.last_name)
response.commit.ID <- GET(full.uri.commit, query = query.params.commit)
body.commit.ID <- fromJSON(content(response.commit.ID,"text"))$results$members[[1]] %>%
flatten()
ChooseRandCommitID <- function() {
rand <- runif(1, 1, 33)
rand.committee <- committees.with.names$committee_id[rand]
if(committees.with.names$committee_id[rand]$subcommittee == TRUE) {
ChooseRandCommitID()
} else {
return(filter(committees.with.names, committee_id == rand.committee))
}
}
rand.commit <- ChooseRandCommitID() #Stores a random committee ID in a variable.
rand.committee <- committees.with.names$committee_id[10]
ChooseRandCommitID <- function() {
rand <- runif(1, 1, 33)
rand.committee <- committees.with.names$committee_id[rand]
if(committees.with.names$subcommittee[rand] == TRUE) {
ChooseRandCommitID()
} else {
return(filter(committees.with.names, committee_id == rand.committee))
}
}
rand.commit <- ChooseRandCommitID() #Stores a random committee ID in a variable.
View(committees.with.names)
query.params.commit.ID <- paste0("committee_id=", rand.commit$committee_id, "&fields=members,name&per_page=all")
rand.commit <- ChooseRandCommitID() #Stores a random committee ID in a variable.
query.params.commit.ID <- paste0("committee_id=", rand.commit$committee_id, "&fields=members,name&per_page=all")
response.commit.ID <- GET(full.uri.commit, query = query.params.commit)
body.commit.ID <- fromJSON(content(response.commit.ID,"text"))$results$members[[1]] %>%
flatten()
View(body.commit.ID)
body.commit.ID <- fromJSON(content(response.commit.ID,"text"))$results
View(body.commit.ID)
response.commit.ID
response.commit.ID <- GET(full.uri.commit, query = query.params.commit)
response.commit.ID <- GET(full.uri.commit, query = query.params.commit)
response.commit.ID
query.params.commit.ID <- paste0("committee_id=", rand.commit$committee_id, "&fields=members,name&per_page=all")
response.commit.ID <- GET(full.uri.commit, query = query.params.commit.ID)
body.commit.ID <- fromJSON(content(response.commit.ID,"text"))$results$members[[1]] %>%
flatten()
committee.chair <- filter(body.commit.ID, grepl("Chair", title))
committee.chair.name <- paste(committee.chair$legislator.first_name, committee.chair$legislator.last_name)
num.of.members <- as.numeric(count(body.commit.ID))
rep.rand.commit <- paste(rand.commit$results.first_name, rand.commit$results.last_name)
side.of.rep <- filter(body.commit.ID, grepl(rand.commit$results.first_name, legislator.first_name)) %>%
filter(grepl(rand.commit$results.last_name, legislator.last_name) %>%
$side
side.of.rep <- filter(body.commit.ID, grepl(rand.commit$results.first_name, legislator.first_name)) %>%
filter(grepl(rand.commit$results.last_name, legislator.last_name) %>%
side.of.rep$side
side.of.rep <- filter(body.commit.ID, grepl(rand.commit$results.first_name, legislator.first_name)) %>%
side.of.rep <- filter(body.commit.ID, grepl(rand.commit$results.first_name, legislator.first_name)) %>%
filter(grepl(rand.commit$results.last_name, legislator.last_name)) %>%
select(side)
side.of.rep <- filter(body.commit.ID, grepl(rand.commit$results.first_name, legislator.first_name)) %>%
filter(grepl(rand.commit$results.last_name, legislator.last_name)) %>%
as.character(select(side))
side.of.rep <- filter(body.commit.ID, grepl(rand.commit$results.first_name, legislator.first_name)) %>%
filter(grepl(rand.commit$results.last_name, legislator.last_name)) %>%
select(side) %>%
as.character()
View(rand.commit)
rand.commit <- filter(committees.with.names, committee_id == "SSFI")
rep.rand.commit <- paste(rand.commit$results.first_name, rand.commit$results.last_name)
query.params.commit.ID <- paste0("committee_id=", rand.commit$committee_id, "&fields=members,name&per_page=all")
response.commit.ID <- GET(full.uri.commit, query = query.params.commit.ID)
body.commit.ID <- fromJSON(content(response.commit.ID,"text"))$results$members[[1]] %>%
flatten()
committee.chair <- filter(body.commit.ID, grepl("Chair", title))
committee.chair.name <- paste(committee.chair$legislator.first_name, committee.chair$legislator.last_name)
num.of.members <- as.numeric(count(body.commit.ID))
side.of.rep <- filter(body.commit.ID, grepl(rand.commit$results.first_name, legislator.first_name)) %>%
filter(grepl(rand.commit$results.last_name, legislator.last_name)) %>%
select(side) %>%
as.character()
committee.info <- "The Senate Committee on Finance concerns itself primarily with taxes and other revenue measures. They are currently reviewing S.439: A bill to amend part B of title IV of the Social Security Act to ensure that mental health screenings and assessments are provided to children and youth upon entry into foster care."
f.on.committee <- as.numeric(count(legislator.gender == "F"))
f.on.committee <- as.numeric(count(body.commit.ID$legislator.gender == "F"))
f.on.committee <- as.numeric(count(group(body.commit.ID$legislator.gender == "F")))
f.on.committee <- as.numeric(count(group_by(body.commit.ID, legislator.gender == "F")))
f.on.committee <- group_by(body.commit.ID, legislator.gender == "F")
View(f.on.committee)
View(f.on.committee)
View(f.on.committee)
f.on.committee <- count(group_by(body.commit.ID, legislator.gender == "F"))
f.on.committee <- as.numberic(count(group_by(body.commit.ID, legislator.gender == "F")))
f.on.committee <- as.numeric(count(group_by(body.commit.ID, legislator.gender == "F")))
f.on.committee <- count(group_by(body.commit.ID, legislator.gender == "F"))
View(f.on.committee)
View(f.on.committee)
f.on.committee <- filter(body.commit.ID, legislator.gender == "F") %>%
count() %>%
as.numeric()
m.on.committee <- filter(body.commit.ID, legislator.gender == "M") %>%
count() %>%
as.numeric()
f.percent <- paste0(round((f.on.committee / num.of.members) * 100), "%")
m.percent <- paste0(round((m.on.committee / num.of.members) * 100), "%")
ChooseRandCommitID <- function() {
rand <- runif(1, 1, 33)
rand.committee <- committees.with.names$committee_id[rand]
if(committees.with.names$subcommittee[rand] == TRUE) {
ChooseRandCommitID()
} else {
return(filter(committees.with.names, committee_id == rand.committee))
}
}
"The zipcode `r "98105"` is in district `r district`."
data < womensrole
shiny::runApp('C:/Users/Stephanie/Desktop/INFO201Assignments/info201-final-project')
data <- read.csv(file = "./data/mental-health-in-tech-2016.csv")
setwd("C:/Users/Stephanie/Desktop/INFO201Assignments/info201-final-project")
data <- read.csv(file = "./data/mental-health-in-tech-2016.csv")
data <- read.csv(file = "./Data/mental-health-in-tech-2016.csv")
setwd("C:/Users/Stephanie/Desktop/INFO201Assignments/info201-final-project")
data <- read.csv(file = "./Data/mental-health-in-tech-2016.csv")
data <- read.csv("./Data/mental-health-in-tech-2016.csv")
data <- read.csv("./Data/mental-health-in-tech-2016.csv")
data <- read.csv("./Data/mental-health-in-tech-2016.csv")
setwd("C:/Users/Stephanie/Desktop/INFO201Assignments/info201-final-project")
data <- read.csv("./Data/mental-health-in-tech-2016.csv")
data <- read.csv("./Data/mental-health-in-tech-2016")
data <- read.csv("./Data/mental-health-in-tech-2016.csv")
data <- read.csv('./Data/mental-health-in-tech-2016.csv')
data <- read.csv('./Data/mental-heath-in-tech-2016.csv')
View(data)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv', na.rm = TRUE)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv', na.omit = TRUE)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv') %>%
na.rm()
data <- read.csv('./Data/mental-heath-in-tech-2016.csv') %>%
na.omit()
data <- read.csv('./Data/mental-heath-in-tech-2016.csv') %>%
na.omit()
View(data)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv')
data <- read.csv('./Data/mental-heath-in-tech-2016.csv') %>%
max(na.rm = TRUE)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv', stringsAsFactors = TRUE) %>%
max(na.rm = TRUE)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv', stringsAsFactors = TRUE)
View(data)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv', stringsAsFactors = FALSE)
View(data)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv') %>%
apply(2, na.rm = TRUE)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv') %>%
apply(2, max, na.rm = TRUE)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv') %>%
apply(2, max, na.rm = TRUE) >%
as.data.frame()
data <- read.csv('./Data/mental-heath-in-tech-2016.csv') %>%
apply(2, max, na.rm = TRUE) %>%
as.data.frame()
View(data)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv')
View(data)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv') %>%
complete.cases()
data <- read.csv('./Data/mental-heath-in-tech-2016.csv') %>%
complete.cases() %>%
as.data.frame()
data <- read.csv('./Data/mental-heath-in-tech-2016.csv')
x <- data[complete.cases(data), ]
View(x)
str(x)
library("dplyr", lib.loc="~/R/win-library/3.3")
library(jsonlite)
flatten(x)
x1 <- flatten(x)
View(x1)
data <- read.csv('./Data/mental-heath-in-tech-2016.csv')
comfort.level <- data[,11:12]
View(comfort.level)
comfort.level <- data[,11:12] %>%
na.omit()
View(comfort.level)
select(comfort.level, !contains(""))
data <- read.csv('./Data/mental-heath-in-tech-2016.csv', na.strings = c(" ", NA))
View(data)
data[1,4]
comfort.level <- data[,11:12] %>%
col.names(c("Mental", "Physical"))
comfort.level <- data[,11:12] %>%
colnames(c("Mental", "Physical"))
comfort.level <- colnames(c("Mental", "Physical"))
colnames(comfort.level) <- c("Mental", "Physical")
comfort.level <- data[,11:12]
colnames(comfort.level) <- c("Mental", "Physical")
ggplot(data = comfort.level) +
geom_point(mapping = aes(x=Mental, y = Physical))
comfort.level <- comfort.level[!is.na(comfort.level),]
View(comfort.level)
comfort.level <- comfort.level[!is.na(comfort.level$Mental),]
View(comfort.level)
comfort.level <- data[,11:12]
colnames(comfort.level) <- c("Mental", "Physical")
comfort.level <- comfort.level[!is.na(comfort.level$Mental) & !is.na(comfort.level$Physical),]
View(comfort.level)
select(comfort.level, is.na())
select(comfort.level, !is.na())
select(comfort.level, !is.na(comfort.level))
comfort.level <- data[,11:12] %>%
na.omit()
comfort.level <- data[,11:12] %>%
na.exclude()
colnames(comfort.level) <- c("Mental", "Physical")
comfort.level <-  comfort.level[!(is.na(comfort.level$Mental) | comfort.level$Physical==""), ]
View(comfort.level)
ggplot(data = comfort.level) +
geom_point(mapping = aes(x=Mental, y = Physical))
yes < select(comfort.level, contains("Yes")) %>%
count() %>%
as.numeric()
yes <- select(comfort.level, contains("Yes")) %>%
count() %>%
as.numeric()
yes <- select(comfort.level, contains("Yes")) #%>%
View(yes)
yes.mental < filter(comfort.level, grepl(Yes, Mental)) %>%
count() %>%
as.numerc()
yes.mental <- filter(comfort.level, grepl(Yes, Mental)) %>%
count() %>%
as.numerc()
filtered <- filter(data, grepl(Class, ï..What.is.your.current.class.standing.)) %>%
as.data.frame()
yes.mental <- filter(comfort.level, grepl(Yes, Mental)) %>%
count() %>%
as.numeric()
library("dplyr", lib.loc="~/R/win-library/3.3")
yes.mental <- filter(comfort.level, grepl(Yes, Mental)) %>%
count() %>%
as.numeric()
yes.mental <- filter(comfort.level, grepl("Yes", Mental)) %>%
count() %>%
as.numeric()
maybe.mental <- filter(comfort.level, grepl("Maybe", Mental)) %>%
count() %>%
as.numeric()
no.mental <- filter(comfort.level, grepl("No", Mental)) %>%
count() %>%
as.numeric()
yes.physical <- filter(comfort.level, grepl("Yes", Physical)) %>%
count() %>%
as.numeric()
physical <- c(yes.physical, maybe.physical, no.physical)
yes.physical <- filter(comfort.level, grepl("Yes", Physical)) %>%
count() %>%
as.numeric()
maybe.physical <- filter(comfort.level, grepl("Maybe", Physical)) %>%
count() %>%
as.numeric()
no.physical <- filter(comfort.level, grepl("No", Physical)) %>%
count() %>%
as.numeric()
physical <- c(yes.physical, maybe.physical, no.physical)
comfort.level.num <- data.frame(mental, physical)
mental <- c(yes.mental, maybe.mental, no.mental)
comfort.level.num <- data.frame(mental, physical)
View(data)
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% select(If.yes..what.condition.s..have.you.been.diagnosed.with., If.maybe..what.condition.s..do.you.believe.you.have.) %>% View()
library(dplyr)
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% select(If.yes..what.condition.s..have.you.been.diagnosed.with., If.maybe..what.condition.s..do.you.believe.you.have.) %>% View()
data %>% select(If.yes..what.condition.s..have.you.been.diagnosed.with.)
stringr::str_split("(Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", "|")
stringr::str_split_fixed("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc), "|")
stringr::str_split_fixed("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", "|")
stringr::str_split_fixed("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", "|", n = Inf)
stringr::str_split("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "|")
stringr::str_split("Hello everybody | my name is | name", pattern = "|")
stringr::str_split("Hello everybody & my name is & name", pattern = "&")
stringr::str_split("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "\|")
stringr::str_replace("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "|", replacement = "&")
stringr::str_replace("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "|", replacement = "&")
stringr::str_replace("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "A", replacement = "@")
stringr::str_replace("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "o", replacement = "@")
stringr::str_replace_all("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "|", replacement = "&")
strsplit("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", split = "\\|and")
strsplit("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", split = "\\|and", fixed = TRUE)
strsplit("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", split = "\\|", fixed = TRUE)
strsplit("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", split = "\\|", fixed = TRUE)
strsplit("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", split = ")\\|", fixed = TRUE)
strsplit("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", split = "\\)\\|", fixed = TRUE)
stringr::str_replace_all("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "\\|" replacement = "&")
stringr::str_replace_all("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "\\|", replacement = "&")
stringr::str_split("Anxiety Disorder (Generalized, Social, Phobia, etc)&Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "&")
stringr::str_split("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "\\|")
stringr::str_split("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)"), pattern = "\\|")
stringr::str_split("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "\\|")
stringr::str_split("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "\\|")
c("i", "2", "3") %>% length()
stringr::str_split("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "\\|") %>% length()
stringr::str_split("Anxiety Disorder (Generalized, Social, Phobia, etc)&Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "&") %>% length()
unlist(strsplit("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "\\|", fixed = TRUE))
unlist(strsplit("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", "\\|", fixed = TRUE))
stringr::str_split("Hello&My name& is &This is my name", "&")
stringr::str_split("Hello&My name& is &This is my name", "&") %>% length()
stringr::str_split_fixed("Hello&My name is &This is my name", "&")
stringr::str_split_fixed("Hello&My name is &This is my name", "&", n = Inf)
stringr::str_split_fixed("Hello&My name is &This is my name", "&", n = Inf) %>% length()
stringr::str_split_fixed("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "\\|", n = Inf)
stringr::str_split_fixed("Anxiety Disorder (Generalized, Social, Phobia, etc)|Mood Disorder (Depression, Bipolar Disorder, etc)", pattern = "\\|", n = Inf) %>% length()
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% select(If.yes..what.condition.s..have.you.been.diagnosed.with., If.maybe..what.condition.s..do.you.believe.you.have.) %>% View()
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% paste(data$If.yes..what.condition.s..have.you.been.diagnosed.with., data$If.maybe..what.condition.s..do.you.believe.you.have.) %>% View()
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% select(If.yes..what.condition.s..have.you.been.diagnosed.with.) %>% length()
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% select(If.yes..what.condition.s..have.you.been.diagnosed.with.) %>% rnow()
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% select(If.yes..what.condition.s..have.you.been.diagnosed.with.) %>% nrow()
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% select(If.maybe..what.condition.s..do.you.believe.you.have.) %>% nrow()
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% paste(select(If.yes..what.condition.s..have.you.been.diagnosed.with.), select(If.maybe..what.condition.s..do.you.believe.you.have.))
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% paste(data$If.yes..what.condition.s..have.you.been.diagnosed.with., data$If.maybe..what.condition.s..do.you.believe.you.have.)
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% paste(data$If.yes..what.condition.s..have.you.been.diagnosed.with., data$If.maybe..what.condition.s..do.you.believe.you.have.) %>% View()
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% tidyr::unite(If.yes..what.condition.s..have.you.been.diagnosed.with., If.maybe..what.condition.s..do.you.believe.you.have.) %>% View*()
data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>% tidyr::unite(If.yes..what.condition.s..have.you.been.diagnosed.with., If.maybe..what.condition.s..do.you.believe.you.have.) %>% View()
data <- read.csv('./mental-heath-in-tech-2016.csv')
data <- read.csv('./mental-heath-in-tech-2016.csv')
setwd("~/Desktop/info201/etc folder")
data <- read.csv('./mental-heath-in-tech-2016.csv')
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
If.maybe..what.condition.s..do.you.believe.you.have.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..)
View(data)
colnames(data) <- c("yes.condition", "maybe.condition", "comfort")
tidyr::unite(data, yes.condition, maybe.condition) %>% View()
data <- tidyr::unite(data, yes.condition, maybe.condition)
data <- read.csv('./mental-heath-in-tech-2016.csv')
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. != "No") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..)
colnames(data) <- c("yes.condition", "comfort")
data <- read.csv('./mental-heath-in-tech-2016.csv')
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..)
colnames(data) <- c("yes.condition", "comfort")
colnames(data) <- c("diagonosis.status", "comfort")
stringr::str_split_fixed(data$diagonosis.status, pattern = "\\|", n = Inf) %>% View()
data$diagonosis.status <- stringr::str_split_fixed(data$diagonosis.status, pattern = "\\|", n = Inf) %>% View()
data <- read.csv('./mental-heath-in-tech-2016.csv')
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..)
colnames(data) <- c("diagonosis.status", "comfort")
temp <- stringr::str_split_fixed(data$diagonosis.status, pattern = "\\|", n = Inf) %>% data.frame()
View(temp)
temp <- stringr::str_split_fixed(data$diagonosis.status, pattern = "\\|", n = Inf) %>% length()
temp <- stringr::str_split_fixed(data$diagonosis.status, pattern = "\\|", n = Inf) %>% data.frame()
temp <- stringr::str_split_fixed(data$diagonosis.status, pattern = "\\|", n = Inf) %>% unique()
View(temp)
lapply(data$diagonosis.status, stringr::str_split_fixed(pattern = "\\|", n = Inf))
lapply(stringr::str_split_fixed(data$diagonosis.status, pattern = "\\|", n = Inf))
SplitDiagnosisList <- function(input) {
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf))
}
temp <- lapply(data$diagonosis.status, SplitDiagnosisList)
temp <- lapply(data$diagonosis.status, SplitDiagnosisList) %>% View()
data <- read.csv('./mental-heath-in-tech-2016.csv')
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..)
colnames(data) <- c("diagonosis.status", "comfort")
temp <- lapply(data$diagonosis.status, SplitDiagnosisList) %>% View()
SplitDiagnosisList <- function(input) {
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf))
}
temp <- lapply(data$diagonosis.status, SplitDiagnosisList) %>% View()
data <- read.csv('./mental-heath-in-tech-2016.csv')
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..)
colnames(data) <- c("diagonosis.status", "comfort")
temp <- lapply(data$diagonosis.status, SplitDiagnosisList) %>% View()
temp <- lapply(data$diagonosis.status, SplitDiagnosisList)
View(temp)
temp <- lapply(data$diagonosis.status, SplitDiagnosisList) %>% data.frame()
View(temp)
temp <- sapply(data$diagonosis.status, SplitDiagnosisList)
View(temp)
temp <- sapply(data$diagonosis.status, SplitDiagnosisList) %>% data.frame()
library(dplyr)
temp <- temp %>% plyr::ldply(temp)
temp <- plyr::ldply(data$diagonosis.status, SplitDiagnosisList)
View(temp)
temp <- sapply(data$diagonosis.status, SplitDiagnosisList)
temp <- plyr::ldply(data$diagonosis.status, SplitDiagnosisList)
temp <- sapply(data$diagonosis.status, SplitDiagnosisList)
temp <- SplitDiagnosisList(data$diagonosis.status)
View(temp)
setwd("~/Desktop/info201/info201-final-project/scripts")
df <- data.frame(matrix(unlist(temp), nrow = nrow(data), byrow=T),stringsAsFactors=FALSE)
View(df)
data <- read.csv('../Data/mental-heath-in-tech-2016.csv') #will remove later
DiagonosisWillingness <- function(data, diagonosis.status) {
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..)
colnames(data) <- c("diagonosis.status", "comfort")
#create list of dataframes of diagnosis of a
temp <- SplitDiagnosisList(data$diagonosis.status)
diagnosis.list <- sapply(data$diagonosis.status, SplitDiagnosisList)
}
SplitDiagnosisList <- function(input) {
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf))
}
temp <- SplitDiagnosisList(data$diagonosis.status)
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..)
temp <- SplitDiagnosisList(data$diagonosis.status)
SplitDiagnosisList()litDiagnosisList <- function(input) {
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf))
}
library(dplyr)
library(dplyr)
data <- read.csv('../Data/mental-heath-in-tech-2016.csv') #will remove later
DiagonosisWillingness <- function(data, diagonosis.status) {
# selects observations that currently have mental health disorder
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..)
colnames(data) <- c("diagonosis.status", "comfort")
#create list of dataframes of diagnosis per observation
temp <- SplitDiagnosisList(data$diagonosis.status)
diagnosis.list <- sapply(data$diagonosis.status, SplitDiagnosisList)
}
# Creates a vector of diagonosis
# precondition: diagonosis listed in format of "<condition 1>|<condition 2>|<condition ...>"
#               each condition is seperated by vertical bar
SplitDiagnosisList()litDiagnosisList <- function(input) {
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf))
}
library(stringr)
# selects observations that currently have mental health disorder
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..)
colnames(data) <- c("diagonosis.status", "comfort")
#create list of dataframes of diagnosis per observation
temp <- SplitDiagnosisList(data$diagonosis.status)
diagnosis.list <- sapply(data$diagonosis.status, SplitDiagnosisList)
# Creates a vector of diagonosis
# precondition: diagonosis listed in format of "<condition 1>|<condition 2>|<condition ...>"
#               each condition is seperated by vertical bar
SplitDiagnosisList()litDiagnosisList <- function(input) {
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf))
}
temp <- SplitDiagnosisList(data$diagonosis.status)
diagnosis.list <- sapply(data$diagonosis.status, SplitDiagnosisList)
View(temp)
diagnosis.list <- sapply(data$diagonosis.status, SplitDiagnosisList) %>% data.frame()
View(diagnosis.list)
diagnosis.list <- sapply(data$diagonosis.status, SplitDiagnosisList) %>% data.frame() %>% unique()
View(diagnosis.list)
diagnosis.list <- sapply(data$diagonosis.status, SplitDiagnosisList)
temp <- SplitDiagnosisList(data$diagonosis.status) %>% unique()
View(temp)
temp %>% unique() %>% View()
View(data)
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf) %>% nrow())
SplitDiagnosisList()litDiagnosisList <- function(input) {
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf) %>% nrow())
}
temp <- SplitDiagnosisList(data$diagonosis.status)
SplitDiagnosisList()litDiagnosisList <- function(input) {
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf) %>% nrow())
}
SplitDiagnosisList <- function(input) {
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf) %>% nrow())
}
temp <- SplitDiagnosisList(data$diagonosis.status)
temp <- SplitDiagnosisList(data$diagonosis.status) %>% unique()
View(temp)
diagnosis.list <- sapply(data$diagonosis.status, SplitDiagnosisList)
View(diagnosis.list)
SplitDiagnosisList <- function(input) {
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf) %>% length())
}
temp <- SplitDiagnosisList(data$diagonosis.status)
diagnosis.list <- sapply(data$diagonosis.status, SplitDiagnosisList)
View(temp)
View(diagnosis.list)
NumDiagnosis <- function(input) {
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf) %>% length())
}
NumDiagnosis <- function(input) {
return(stringr::str_split_fixed(input, pattern = "\\|", n = Inf) %>% length())
}
#DiagonosisWillingness <- function(data, diagonosis.status) {
#}
# selects observations that currently have mental health disorder
data <- data %>% filter(Do.you.currently.have.a.mental.health.disorder. == "Yes") %>%
select(If.yes..what.condition.s..have.you.been.diagnosed.with.,
Would.you.feel.comfortable.discussing.a.mental.health.disorder.with.your.direct.supervisor.s..)
colnames(data) <- c("diagonosis.status", "comfort")
#create list of dataframes of diagnosis per observation
temp <- NumDiagnosis(data$diagonosis.status)
diagnosis.list <- sapply(data$diagonosis.status, NumDiagnosis)
